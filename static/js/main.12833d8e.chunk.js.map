{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","onClick","handleSortByChange","getSortByClass","renderSortByOptions","onChange","placeholder","Yelp","search","fetch","concat","headers","Authorization","then","response","json","console","log","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12833d8e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\n\r\n\r\nclass Business extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Business\">\r\n                <div className=\"image-container\">\r\n                    <img src={this.props.business.imageSrc} alt={this.props.business.name} />\r\n                </div>\r\n                <h2>{this.props.business.name}</h2>\r\n                <div className=\"Business-information\">\r\n                    <div className=\"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n                    </div>\r\n                    <div className=\"Business-reviews\">\r\n                        <h3>{this.props.business.category}</h3>\r\n                        <h3 className=\"rating\">{this.props.business.rating}</h3>\r\n                        <p>{this.props.business.reviewCount}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business.js';\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                { this.props.businesses.map(business => <Business key={business.id} business={business} />) }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst sortByOptions = {\r\n    'Best Match': 'best_match',\r\n    'Highest Rated': 'rating',\r\n    'Most Reviewed': 'review_count'\r\n}\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: '',\r\n            location: '',\r\n            sortBy: 'best_match'\r\n        };\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n    }\r\n\r\n    // returns the current CSS class for a sorting option\r\n    getSortByClass(sortByOption) {\r\n        if (sortByOption === this.state.sortBy) {\r\n            return 'active';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    // set the state to the current sorting option\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({ sortBy: sortByOption });\r\n    }\r\n\r\n    handleTermChange(event) {\r\n        this.setState({ term: event.target.value });\r\n    }\r\n    handleLocationChange(event) {\r\n        this.setState({ location: event.target.value});\r\n    }\r\n    handleSearch(event) {\r\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy)\r\n        event.preventDefault();\r\n    }\r\n\r\n    renderSortByOptions() {\r\n        return Object.keys(sortByOptions).map(\r\n            sortByOption => {\r\n                let sortByOptionValue = sortByOptions[sortByOption];\r\n                return <li key={sortByOptionValue} onClick={this.handleSortByChange.bind(this, sortByOptionValue)} className={this.getSortByClass(sortByOptionValue)}>{sortByOption}</li>\r\n            }\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\r\n                    <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <button onClick={this.handleSearch}>Let's Go</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","const apiKey = 'Mn2G99kyu4QBQ9LvvilBWEi2-8vVVtkLw4iirOlae8zFDmabmfC5oawoy6Y2JoHYOlYm8XPND7tVKATpbrWKZOQwS8PIVNqY37lAD7m81XfK2aDsV76NGYCM0KlNXHYx';\r\n\r\nconst Yelp = {\r\n    search(term, location, sortBy) {\r\n        return fetch((`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`),\r\n        {\r\n            headers: {\r\n                Authorization: `Bearer ${apiKey}`,\r\n            },\r\n        })\r\n        .then(response => {\r\n           if (response){ \r\n            return response.json();\r\n           } else {\r\n               console.log('the response is false T'); // should be later changed to error maybe\r\n           }\r\n        })\r\n        .then(jsonResponse => {\r\n            if (jsonResponse.businesses) {\r\n                return jsonResponse.businesses.map(business => {\r\n                    return {\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        address: business.location.address1,\r\n                        city: business.location.city,\r\n                        state: business.location.state,\r\n                        zipCode: business.location.zip_code,\r\n                        category: business.categories[0].title,\r\n                        rating: business.rating,\r\n                        reviewCount: business.review_count\r\n                    };\r\n                });\r\n            } else {\r\n                console.log('the response json is false');  // should be later changed to error maybe\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default Yelp;","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport BusinessList from './components/BusinessList/BusinessList.js';\nimport SearchBar from './components/SearchBar/SearchBar.js';\nimport Yelp from './util/Yelp.js';\n\n// Below is a list of some potential features to add to Ravenous:\n\n// Make addresses clickable and have them open the address in Google Maps in a new tab\n// Make images clickable and have them open the business' website in a new tab\n// Clicking on a different sorting option automatically requeries the Yelp API, rather than having to manually click \"Let's Go\" again\n// Implement your own type of sort (for example, by entering a distance or radius from a central location)\n// Allow you to search by pressing \"Enter\" (or \"Return\") on your keyboard, as opposed to manually clicking\n// Add autocompletion of addresses to the \"Location\" input\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n    this.setState = this.setState.bind(this); // pokus o opravu bugu\n  }\n  searchYelp(term, location, sortBy)  {\n    Yelp.search(term, location, sortBy)\n    .then(businesses => {\n      this.setState({businesses: businesses})\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}